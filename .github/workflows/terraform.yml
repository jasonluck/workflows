name: Terraform

on:
  workflow_call:
    inputs:
      path:
        required: false
        type: string
        default: '.'
      terraform_version:
        description: The version of terraform to use. Defaults to the latest
        required: false
        default: 'latest'
      tfsec_version:
        description: The version of tfsec to use. Defaults to the latest
        required: false
        default: 'latest'
      terrform_workspace:
        description: Name of the terraform workspace.
        required: false
        default: 'default'
      variables:
        description: Variables to pass to terraform
        required: false
        default: ''
      apply:
        description: Flag to apply changes. Defaults to true
        required: false
        default: true
    secrets:
      token:
        required: true


jobs:
  linting:
    uses: ./.github/workflows/tf-lint.yml
    permissions:
      contents: write
      pull-requests: write
    with:
      path: ${{ inputs.path }}
      terraform_version: ${{ inputs.terraform_version }}
      terraform_workspace: ${{ inputs.terraform_workspace }}
      variables: ${{ inputs.variables }}
      apply: ${{ inputs.apply }}
      token: ${{ secrets.token }}

  security:
    uses: ./.github/workflows/tf-security.yml
    permissions:
      contents: read
      pull-requests: write
    with:
      path: ${{ inputs.path }}
      tfsec_version: ${{ inputs.tfsec_version }}

  terraform:
    name: Terraform
    runs-on: unbuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: 'Terraform Init'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ inputs.terraform_version }}
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: ${{ inputs.path }}
          tf_actions_comment: true
          args: '${{ inputs.variables }}'
        env:
          GITHUB_TOKEN: ${{ secrets.token }}
          TF_WORKSPACE: ${{ inputs.terraform_workspace }} 

      - name: 'Terraform Plan'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ inputs.terraform_version }}
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: ${{ inputs.path }}
          tf_actions_comment: true
          args: '-out="${{ runner.temp }}/tfplan" ${{ inputs.variables }}'
        env:
          GITHUB_TOKEN: ${{ secrets.token }}
          TF_WORKSPACE: ${{ inputs.terraform_workspace }} 

      - name: 'Terraform Apply'
        uses: hashicorp/terraform-github-actions@master
        if: github.event_name == 'push' && inputs.apply
        with:
          tf_actions_version: ${{ inputs.terraform_version }}
          tf_actions_subcommand: 'apply'
          tf_actions_working_dir: ${{ inputs.path }}
          tf_actions_comment: true
          args: '"${{ runner.temp }}/tfplan" ${{ inputs.variables }}'
        env:
          GITHUB_TOKEN: ${{ secrets.token }}
          TF_WORKSPACE: ${{ inputs.terraform_workspace }}    
      
